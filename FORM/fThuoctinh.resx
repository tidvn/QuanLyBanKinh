<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2Button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAA5NJREFUaEPtmi2QFDEQhdchkUgkEnkSiUQikUgk8hwSiUQikUgkEolEIpFY6O/q
        QqWaTqZ70pmrofKqXlHc7uRnXv8me1lYWFhY+I/xQvj5lq+FD4XZuC98KfwkZJ5r4Z3gqfC3QRbFi7gn
        HMFz4QehNccr4eH4KrQWU/hL+F7Ii/HiSvhO+FNojVn4Qzj6QkN4JrQW0iILfCt8JNTADTDT70Lr2RYP
        VXlL3R6/CVksfvnl9m97eJjKlroEFHzuY/W3LJaYgHvozw5R2VL3sbDggRD1Rq1AR33GJS7U35uusqUu
        qraAz74RevyTxROw6penQRzQz01VeUvdHp4IMcs6AqMYqYcX6cGhKkfVbUGrTWERARG9fh5OUXlE3QI2
        p8eI5GmAmqhaj5GucisyR2FVZwSnKKar3Iq4JafiWx6wOT2G1y2wjlK76zFgmsqWuhZLLu5NauVpfLoH
        rILApoOVxRSVo/mUKEw0JiprtNKTDlykM1KQ9tUtDqvsVbdFNkgepoCwAlYhKuIWKISbWN/xckjlkWpJ
        s1d8jG6y5m6V8UdrwDNwl8qtaHgGYjEh4E/WQGcihwluWAXC2UjH5gY+YA1yJoYO+6zSLZvRHBtlaMNW
        CZhJgsqM05GaoQ2PFhxbpFSc/VJDPjw7StME0Fpan2Ux2roOnSj2SBNQaude9TVC4kMYqGANNkrMuWBW
        Ngj5bwH1aGaNC1G37p2ZIztaM563P/8HtHjWoHuJ1WhQ5Hh6XS8JuENggIwFWZstyNp0b44QqEu3Lrh6
        9CxkZNM8x/Op4BQi6m98nzbTC1wo2oOz2VCj4EUkwBDsiMB7j1uwCG97yoZ3B6kerA6KgztSQCFqWlei
        e8FGmLeew7pUC1VVXli38Zmb8wKr0fGEIikVVEY6oKRPEgCXbvVaYOrLx6f0BEOng4Ow6gPM3QX8pNS0
        /KvvZYEOINMCRQC6Duf/NVhffU+NG9w0FK2+tNy8Yyr6sz33StngvFuvC+V7v0Qgy+w6nYzk1lmwhNgi
        lhkuHfluuNecgNoVvfx7U8kGPL+Pqolv4CP6XmgmSEm4GS5lrckiApFSrbuumwF7PtAiA6bXshUoHSk4
        IpZI2gwJUqJcpCf2NAlRRJoKTJz0NPybTwKE5/oSl8jGlvkyZ+t6NgW8cUzYeuv4dTas2hl6LuBTgW+U
        robNs4BhUzLAhtg01lW6sLsuehYWFhYWJuBy+QNTuE3+IIr2rQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>